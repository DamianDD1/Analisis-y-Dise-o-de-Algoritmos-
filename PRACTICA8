#include <stdio.h>
#include <stdbool.h>
#include <string.h>


bool isScramble(char* s1, char* s2) {
    
    if (strcmp(s1, s2) == 0) {
        return true;
    }
   
    if (strlen(s1) != strlen(s2)) {
        return false;
    }

   
    int count[26] = {0};
    for (int i = 0; s1[i] != '\0'; i++) {
        count[s1[i] - 'a']++;
        count[s2[i] - 'a']--;
    }
    
    
    for (int i = 0; i < 26; i++) {
        if (count[i] != 0) {
            return false;
        }
    }

    int n = strlen(s1);
    
   
    bool memo[n][n][n + 1];
    
    
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            for (int len = 0; len <= n; len++) {
                memo[i][j][len] = false;
            }
        }
    }

    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            if (s1[i] == s2[j]) {
                memo[i][j][1] = true;
            }
        }
    }

    
    for (int len = 2; len <= n; len++) {
        for (int i = 0; i <= n - len; i++) {
            for (int j = 0; j <= n - len; j++) {
                
                for (int k = 1; k < len; k++) {
                    if (memo[i][j][k] && memo[i + k][j + k][len - k]) {
                        memo[i][j][len] = true;
                        break;
                    }
                }
               
                if (!memo[i][j][len]) {
                    for (int k = 1; k < len; k++) {
                        if (memo[i][j + len - k][k] && memo[i + k][j][len - k]) {
                            memo[i][j][len] = true;
                            break;
                        }
                    }
                }
            }
        }
    }

    return memo[0][0][n];
}

int main() {
    char s1[31], s2[31]; 

    // Pedimos al usuario las cadenas s1 y s2
    printf("Introduce la primera cadena (s1): ");
    scanf("%s", s1);  

    printf("Introduce la segunda cadena (s2): ");
    scanf("%s", s2);  

   
    if (isScramble(s1, s2)) {
        printf("true\n");
    } else {
        printf("false\n");
    }

    return 0;
}
